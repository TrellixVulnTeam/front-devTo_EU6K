{"ast":null,"code":"var _jsxFileName = \"/home/ubaldo/Escritorio/front-devTo/src/components/content/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport api from '../../lib/api';\nimport Cards from '../Cards';\nimport './styles.scss';\nimport moment from 'moment'; // import ArticleComponent from \"./articles/Articles\";\n// import ArticleStructure from \"./articles/ArticleStructure\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Content = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filterName, setFilterName] = useState('feed');\n  const [filteredPosts, setFilteredPosts] = useState(posts);\n  useEffect(async () => {\n    const result = await api.getAllPosts();\n    console.log(result);\n    setPosts(result);\n    setFilteredPosts([...result].sort((x, y) => {\n      return moment(y.publishedTimestamp) - moment(x.publishedTimestamp);\n    }));\n  }, []);\n\n  const onFilterClick = event => {\n    let name = event.target.name;\n    setFilterName(name);\n    let filteredPostRes = filterBy(name);\n    setFilteredPosts(filteredPostRes);\n  };\n\n  const filterBy = filterNameArg => {\n    if (filterNameArg == 'feed') {\n      let postCopy = [...posts];\n      postCopy.sort((x, y) => {\n        return moment(y.publishedTimestamp) - moment(x.publishedTimestamp);\n      });\n      return postCopy;\n    } else if (filterNameArg == 'week') {\n      return posts.filter(post => moment(post.publishedTimestamp) >= moment().subtract(7, 'days'));\n    } else if (filterNameArg == 'month') {\n      return posts.filter(post => moment(post.publishedTimestamp) >= moment().subtract(1, 'month'));\n    } else if (filterNameArg == 'infinity') {\n      return posts;\n    } else if (filterNameArg == 'latest') {\n      let postCopy = [...posts];\n      postCopy.sort((x, y) => {\n        return moment(y.publishedTimestamp) - moment(x.publishedTimestamp);\n      });\n      return postCopy;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cards-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"cards-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-none d-sm-block\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"subtitle\",\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          color: \"none\",\n          className: `filters ${filterName == \"feed\" && \"active\"}`,\n          name: \"feed\",\n          onClick: onFilterClick,\n          children: \"Feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          color: \"none\",\n          className: `filters ${filterName == \"week\" && \"active\"}`,\n          name: \"week\",\n          onClick: onFilterClick,\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          color: \"none\",\n          className: `filters ${filterName == \"month\" && \"active\"}`,\n          name: \"month\",\n          onClick: onFilterClick,\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          color: \"none\",\n          className: `filters ${filterName == \"infinity\" && \"active\"}`,\n          name: \"infinity\",\n          onClick: onFilterClick,\n          children: \"Infinity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          color: \"none\",\n          className: `filters ${filterName == \"latest\" && \"active\"}`,\n          name: \"latest\",\n          onClick: onFilterClick,\n          children: \"Latest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"articles\",\n      children: filteredPosts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(Cards, {\n          postKey: post._id,\n          postData: post,\n          postIndex: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 22\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Content, \"Y00WTtbuu7joPRqPjbgxbRooYf8=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/ubaldo/Escritorio/front-devTo/src/components/content/index.js"],"names":["React","useEffect","useState","api","Cards","moment","Content","posts","setPosts","filterName","setFilterName","filteredPosts","setFilteredPosts","result","getAllPosts","console","log","sort","x","y","publishedTimestamp","onFilterClick","event","name","target","filteredPostRes","filterBy","filterNameArg","postCopy","filter","post","subtract","map","index","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from '../../lib/api'\nimport Cards from '../Cards'\nimport './styles.scss'\nimport moment from 'moment'\n\n// import ArticleComponent from \"./articles/Articles\";\n// import ArticleStructure from \"./articles/ArticleStructure\";\n\n\nconst Content = () => {\n\n  const [posts, setPosts] = useState([]);\n  const [filterName, setFilterName] = useState('feed')\n  const [filteredPosts, setFilteredPosts] = useState(posts)\n\n\tuseEffect(async () => {\n\n        const result = await api.getAllPosts()  \n        console.log(result) \n        setPosts(result)\n        setFilteredPosts([...result].sort((x,y) => {\n          return moment(y.publishedTimestamp) - moment(x.publishedTimestamp)\n        }))\n       \n    }, []) \n\n  const onFilterClick = (event) => {\n    \n    let name = event.target.name\n    setFilterName( name )\n    \n    let filteredPostRes = filterBy(name)\n\n    setFilteredPosts( filteredPostRes )\n  }  \n  \n  const filterBy = (filterNameArg) => {\n\n      if(filterNameArg == 'feed'){\n        let postCopy = [...posts]\n        postCopy.sort((x,y) => {\n          return moment(y.publishedTimestamp) - moment(x.publishedTimestamp)\n        })\n          return postCopy\n\n      } else if (filterNameArg == 'week'){\n        return posts.filter( post => moment(post.publishedTimestamp) >= moment().subtract(7, 'days')) \n\n      } else if (filterNameArg == 'month'){\n        return posts.filter( post => moment(post.publishedTimestamp) >= moment().subtract(1, 'month'))\n\n      } else if (filterNameArg == 'infinity'){\n        return posts\n\n      } else if (filterNameArg == 'latest'){\n        let postCopy = [...posts]\n        postCopy.sort((x,y) => {\n          return moment(y.publishedTimestamp) - moment(x.publishedTimestamp)\n        })\n        return postCopy\n        }\n      }\n\n  \n\n  return (\n    <section className = \"cards-section\">\n     \n          <nav className = 'cards-navigation'> \n              <div className='d-none d-sm-block'>\n                  <h1 className='subtitle'>Posts</h1>\n              </div>\n              <div>\n                  <button color='none' className={ `filters ${ filterName == \"feed\" && \"active\" }` }  name='feed'  onClick={onFilterClick}>\n                    Feed\n                  </button>\n                  <button color='none' className={ `filters ${ filterName == \"week\" && \"active\" }` } name='week' onClick={onFilterClick}>\n                    Week\n                  </button>\n                  <button color='none' className={ `filters ${ filterName == \"month\" && \"active\" }` } name='month' onClick={onFilterClick}>\n                    Month\n                  </button>\n                  <button color='none' className={ `filters ${ filterName == \"infinity\" && \"active\" }` } name='infinity' onClick={onFilterClick}>\n                    Infinity\n                  </button>\n                  <button color='none' className={ `filters ${ filterName == \"latest\" && \"active\" }` }name='latest' onClick={onFilterClick}>\n                    Latest\n                  </button>\n              </div>\n          </nav>\n         \n      <div className=\"articles\">\n\n          { filteredPosts.map((post, index) => {\n            return ( <Cards\n              postKey = {post._id}\n              postData = {post}\n              postIndex = {index}\n              />)\n          })}\n\n      </div>\n    </section>\n  );\n};\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}