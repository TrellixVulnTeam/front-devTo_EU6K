{"ast":null,"code":"var _jsxFileName = \"/home/ubaldo/Escritorio/front-devTo/src/pages/Search/index.js\",\n    _s = $RefreshSig$();\n\nimport api from \"../../lib/api\";\nimport moment from 'moment';\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./search.scss\";\nimport Cards from \"../../components/Cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search(props) {\n  _s();\n\n  const [sortValue, setSortValue] = useState(\"relevant\");\n  const [posts, setPosts] = useState([]);\n  const [sortedPosts, setSortedPosts] = useState([]);\n  props.changeIsCreatePost(false);\n  const searchTerm = new URLSearchParams(useLocation().search).get(\"search\");\n  console.log(searchTerm); //empty, null or no results\n\n  useEffect(async () => {\n    if (!searchTerm) {\n      setPosts([]);\n      setSortedPosts([]);\n    } else {\n      let allPosts = await api.getAllPosts();\n      allPosts = filterPostsBy(allPosts, searchTerm);\n      setPosts(allPosts);\n      const sortedPostsRes = sortPostsBy(allPosts, sortValue);\n      setSortedPosts(sortedPostsRes);\n    }\n  }, [searchTerm]);\n\n  function filterPostsBy(postsArg, searchValue) {\n    return postsArg.filter(post => post.title.toLowerCase().includes(searchValue.toLowerCase()));\n  }\n\n  function sortPostsBy(postsArg, sortValueArg) {\n    if (sortValueArg == \"relevant\") {\n      postsArg.sort((x, y) => {\n        return y.positiveReactionsCount - x.positiveReactionsCount;\n      });\n    } else if (sortValueArg == \"new\") {\n      postsArg.sort((x, y) => {\n        return moment(y.publishedTimestamp) - moment(x.publishedTimestamp);\n      });\n    } else if (sortValueArg == \"old\") {\n      postsArg.sort((x, y) => {\n        return moment(x.publishedTimestamp) - moment(y.publishedTimestamp);\n      });\n    }\n\n    return postsArg;\n  }\n\n  function sortOnClick(event) {\n    const sortName = event.target.name;\n    const sorted = sortPostsBy(posts, sortName);\n    console.log(sorted);\n    setSortValue(sortName);\n    setSortedPosts(sorted);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container-sm custom-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"d-md-flex flex-column align-items-stretch col-12 col-md-4 col-lg-3 \",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-weight-bold \",\n          children: \"Search results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex icons section-list collapse  mb-n5 \",\n          id: \"section-list\",\n          \"aria-expanded\": \"false\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"item-list  list-group-item-light\",\n            children: \"Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"item-list\",\n            children: \"Podcasts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"item-list\",\n            children: \"People\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"item-list\",\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"item-list\",\n            children: \"My posts only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"col-12 col-md-7 col-lg-8 cards-section  \",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"cards-navigation\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav nav-tabs\",\n            id: \"nav-tab\",\n            role: \"tablist\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `nav-link ${sortValue == \"relevant\" && \"active\"}`,\n              onClick: sortOnClick,\n              id: \"relevance\",\n              \"data-toggle\": \"tab\",\n              role: \"tab\",\n              \"aria-controls\": \"nav-feed\",\n              \"aria-selected\": \"true\",\n              name: \"relevant\",\n              children: \"Most Relevant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `nav-link ${sortValue == \"new\" && \"active\"}`,\n              id: \"newest\",\n              onClick: sortOnClick,\n              \"data-toggle\": \"tab\",\n              role: \"tab\",\n              \"aria-controls\": \"nav-week\",\n              \"aria-selected\": \"false\",\n              name: \"new\",\n              children: \"Newest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `nav-link ${sortValue == \"old\" && \"active\"}`,\n              id: \"oldest\",\n              onClick: sortOnClick,\n              \"data-toggle\": \"tab\",\n              role: \"tab\",\n              \"aria-controls\": \"nav-month\",\n              \"aria-selected\": \"false\",\n              name: \"old\",\n              children: \"Oldest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-content\",\n          id: \"nav-tabContent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-pane fade show active\",\n            id: \"nav-feed\",\n            role: \"tabpanel\",\n            \"aria-labelledby\": \"nav-feed-tab\",\n            children: [!sortedPosts.length && /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"No Results Found...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 53\n            }, this), sortedPosts && sortedPosts.map((post, index) => {\n              return /*#__PURE__*/_jsxDEV(Cards, {\n                postKey: post._id,\n                postData: post,\n                postIndex: index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 42\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"O++zP7o6i3jAJmMVuJA7ewz0mn4=\", false, function () {\n  return [useLocation];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/ubaldo/Escritorio/front-devTo/src/pages/Search/index.js"],"names":["api","moment","React","useEffect","useState","Link","useLocation","Cards","Search","props","sortValue","setSortValue","posts","setPosts","sortedPosts","setSortedPosts","changeIsCreatePost","searchTerm","URLSearchParams","search","get","console","log","allPosts","getAllPosts","filterPostsBy","sortedPostsRes","sortPostsBy","postsArg","searchValue","filter","post","title","toLowerCase","includes","sortValueArg","sort","x","y","positiveReactionsCount","publishedTimestamp","sortOnClick","event","sortName","target","name","sorted","length","map","index","_id"],"mappings":"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","sourcesContent":["import api from \"../../lib/api\"\nimport moment from 'moment'\nimport React, { useEffect, useState } from \"react\";\nimport {\n    Link,\n    useLocation\n  } from \"react-router-dom\";\n  import \"./search.scss\"\nimport Cards from \"../../components/Cards\"\n\nfunction Search(props){\n    const [sortValue, setSortValue] = useState(\"relevant\")\n    const [posts, setPosts] = useState([])\n    const [sortedPosts, setSortedPosts] = useState([])\n    \n    props.changeIsCreatePost(false)\n    const searchTerm = new URLSearchParams(useLocation().search).get(\"search\")\n    console.log(searchTerm)\n\n    //empty, null or no results\n\n    useEffect(async ()=>{\n        if (!searchTerm){\n            setPosts([])\n            setSortedPosts([])\n        }else{\n            let allPosts = await api.getAllPosts()\n            allPosts = filterPostsBy(allPosts, searchTerm)\n            setPosts(allPosts)\n            const sortedPostsRes = sortPostsBy(allPosts, sortValue)\n            setSortedPosts(sortedPostsRes)\n        }\n    },[searchTerm])\n\n    function filterPostsBy(postsArg, searchValue){\n        return postsArg.filter( post => post.title.toLowerCase().includes(searchValue.toLowerCase()))\n    }\n\n    function sortPostsBy(postsArg, sortValueArg){\n        if (sortValueArg == \"relevant\"){\n            postsArg.sort((x,y)=>{\n                return y.positiveReactionsCount - x.positiveReactionsCount\n            })\n        }else if(sortValueArg ==  \"new\"){\n            postsArg.sort((x,y)=>{\n                return moment(y.publishedTimestamp) - moment(x.publishedTimestamp)\n            })\n        }else if(sortValueArg ==  \"old\"){\n            postsArg.sort((x,y)=>{\n                return moment(x.publishedTimestamp) - moment(y.publishedTimestamp)\n            })\n        }\n        return postsArg\n    }\n\n    function sortOnClick(event){\n        const sortName = event.target.name\n        const sorted = sortPostsBy(posts, sortName)\n        console.log(sorted)\n        setSortValue(sortName)\n        setSortedPosts(sorted)\n    }\n\n    return(\n        <main className=\"container-sm custom-container\">\n\n            <div className=\"row\">\n                {/* <!-------------------------------------------------------------------ASIDE LEFT-----------------------------------------------------------------------------------------> */}\n                <aside className=\"d-md-flex flex-column align-items-stretch col-12 col-md-4 col-lg-3 \">\n                {/* <!--aqui esta el input de busqueda--> */}\n                \n                    <h3 className=\"font-weight-bold \">Search results</h3>\n                    <div className=\"d-flex icons section-list collapse  mb-n5 \" id=\"section-list\" aria-expanded=\"false\">\n                        <Link to=\"#\" className=\"item-list  list-group-item-light\">Posts</Link>\n                        <Link to=\"#\" className=\"item-list\">Podcasts</Link>\n                        <Link to=\"#\" className=\"item-list\">People</Link>\n                        <Link to=\"#\" className=\"item-list\">Comments</Link>\n                        <Link to=\"#\" className=\"item-list\">My posts only</Link>\n                    </div>\n                </aside>\n                {/* <!------------------------------------------------------------------------MAIN CARDS---------------------------------------------------------------------------> */}\n                <section className=\"col-12 col-md-7 col-lg-8 cards-section  \">\n\n                    <nav className=\"cards-navigation\">\n                       \n                        <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                            <button className={ `nav-link ${ sortValue == \"relevant\" && \"active\" }` }   onClick={ sortOnClick }id=\"relevance\" data-toggle=\"tab\"\n                                role=\"tab\" aria-controls=\"nav-feed\" aria-selected=\"true\" name=\"relevant\">Most Relevant</button>\n                            <button className={ `nav-link ${ sortValue == \"new\" && \"active\" }` } id=\"newest\" onClick={ sortOnClick } data-toggle=\"tab\"\n                                role=\"tab\" aria-controls=\"nav-week\" aria-selected=\"false\" name=\"new\">Newest</button>\n                            <button className={ `nav-link ${ sortValue == \"old\" && \"active\" }` } id=\"oldest\"  onClick={ sortOnClick }data-toggle=\"tab\"\n                                role=\"tab\" aria-controls=\"nav-month\" aria-selected=\"false\" name=\"old\">Oldest</button>\n\n                        </div>\n                    </nav>\n                    <div className=\"tab-content\" id=\"nav-tabContent\">\n                         <div className=\"tab-pane fade show active\" id=\"nav-feed\" role=\"tabpanel\" aria-labelledby=\"nav-feed-tab\">\n                        {\n                            !sortedPosts.length  && <h1>No Results Found...</h1>\n                        }\n                         { sortedPosts && sortedPosts.map((post, index) => {\n                                return ( <Cards\n                                postKey = {post._id}\n                                postData = {post}\n                                postIndex = {index}\n                                />)\n                            })}\n                         </div>\n\n                    </div>\n\n                </section>\n            </div>\n        </main>\n    )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}