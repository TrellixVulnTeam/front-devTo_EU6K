{"ast":null,"code":"var _jsxFileName = \"/home/ubaldo/Escritorio/front-devTo/src/pages/PostDetail/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport api from \"../../lib/api\";\nimport getUserData from \"../../lib/auth\";\nimport { Spinner } from \"reactstrap\"; //Components\n\nimport LeftAside from \"../../components/postDetailLeftAside\";\nimport RightAside from \"../../components/postDetailRightAside\";\nimport MainSection from \"../../components/postDetailMainSection\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostDetail(props) {\n  _s();\n\n  const [postData, setPostData] = useState(null);\n  const [postComments, setPostComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [collapsed, setCollapsed] = useState(true);\n  const postId = useParams().id;\n  let history = useHistory();\n  props.changeIsCreatePost(false);\n\n  async function likePost() {\n    if (!userData) {\n      history.push('/login');\n    } else {\n      const positiveReactionsCount = postData.positiveReactionsCount + 1;\n      setPostData({ ...postData,\n        positiveReactionsCount\n      });\n      const response = await api.updatePost(postId, {\n        positiveReactionsCount\n      }, userData.token);\n    }\n  }\n\n  function handleInputChange(event) {\n    const value = event.target.value;\n    setComment(value);\n  }\n\n  async function addComment(event) {\n    const date = new Date();\n    const [day, month] = [date.toString().split(\" \")[2], date.toString().split(\" \")[1]];\n    const commentData = {\n      content: comment,\n      creationDate: date,\n      readableCreationDate: `${month} ${day}`,\n      userName: userData._id,\n      reactionsCounter: 0\n    };\n    console.log(\"commentData\");\n    console.log(commentData);\n    const response = await api.addComment(postId, commentData, userData.token);\n    const postDataRes = await api.getPostById(postId);\n    console.log(\"postDataRes\");\n    console.log(postDataRes);\n    const extendedPostData = await mapCommentsUsers(postDataRes, userData.token);\n    console.log(\"extendedPostData\");\n    console.log(extendedPostData);\n    setPostData(extendedPostData);\n    setComment(\"\");\n    setCollapsed(false);\n  }\n\n  async function likeComment(event) {\n    if (!userData) {\n      history.push('/login');\n    } else {\n      const commentId = event.currentTarget.dataset.commentId;\n      console.log(commentId);\n      let comments = [...postData.comments];\n      console.log(comments);\n      const commentIdx = comments.findIndex(comment => comment._id == commentId);\n      console.log(commentIdx);\n      comments[commentIdx].reactionsCounter = comments[commentIdx].reactionsCounter + 1;\n      console.log(comments);\n      setPostData({ ...postData,\n        comments\n      });\n      await api.updateComment(commentId, {\n        reactionsCounter: comments[commentIdx].reactionsCounter\n      }, userData.token);\n    }\n  }\n\n  function onCommentClick() {\n    !userData && history.push('/login');\n  }\n\n  useEffect(async () => {\n    const userData = getUserData();\n    setUserData(userData);\n    const postDataRes = await api.getPostById(postId);\n    const extendedPostData = await mapCommentsUsers(postDataRes, \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMTk0NjUzNzMzNTIwMTBlMDYyOTY3ZSIsImlhdCI6MTYzMTkzNTE3MiwiZXhwIjoxNjMyNTM5OTcyfQ.zjjh8drORIg2FsjCN3FoWweLEZgwuj4w0bCRWc12xzQ\");\n    console.log(extendedPostData);\n    setPostData(extendedPostData);\n  }, []);\n\n  async function mapCommentsUsers(postData, tokenC) {\n    const users = await api.getAllUsers(tokenC);\n    let extendedComments = postData.comments.map(comment => {\n      const userNameId = comment.userName;\n      const user = users.filter(user => user._id == userNameId)[0].userName;\n      return { ...comment,\n        readableUserName: user\n      };\n    });\n    return { ...postData,\n      comments: extendedComments\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container-xl custom-container\",\n    children: [!postData && /*#__PURE__*/_jsxDEV(Spinner, {\n      type: \"grow\",\n      color: \"primary\",\n      children: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 24\n    }, this), postData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"col-12 col-md-1\",\n        children: /*#__PURE__*/_jsxDEV(LeftAside, {\n          positiveReactionsCount: postData.positiveReactionsCount,\n          likePost: likePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"col-12 col-md-11 col-lg-8 post-detail\",\n        children: /*#__PURE__*/_jsxDEV(MainSection, {\n          postData: postData,\n          handleInputChange: handleInputChange,\n          comment: comment,\n          addComment: addComment,\n          likeComment: likeComment,\n          onCommentClick: onCommentClick,\n          collapsed: collapsed,\n          setCollapsed: setCollapsed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"d-none d-lg-block d-xl-block col-lg-3 col-xl-3\",\n        children: /*#__PURE__*/_jsxDEV(RightAside, {\n          postData: postData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostDetail, \"80AyJaQOjnfvFMgPNdIzZBovpzI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n/*Pending\nmakes comments faster\nhandle authentication\ncollapse comments\ninput validation\ncolors of tags\nSpinner\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/home/ubaldo/Escritorio/front-devTo/src/pages/PostDetail/index.js"],"names":["React","useState","useEffect","useParams","useHistory","api","getUserData","Spinner","LeftAside","RightAside","MainSection","PostDetail","props","postData","setPostData","postComments","setPostComments","comment","setComment","userData","setUserData","collapsed","setCollapsed","postId","id","history","changeIsCreatePost","likePost","push","positiveReactionsCount","response","updatePost","token","handleInputChange","event","value","target","addComment","date","Date","day","month","toString","split","commentData","content","creationDate","readableCreationDate","userName","_id","reactionsCounter","console","log","postDataRes","getPostById","extendedPostData","mapCommentsUsers","likeComment","commentId","currentTarget","dataset","comments","commentIdx","findIndex","updateComment","onCommentClick","tokenC","users","getAllUsers","extendedComments","map","userNameId","user","filter","readableUserName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory} from \"react-router-dom\"\nimport api from \"../../lib/api\"\nimport getUserData from \"../../lib/auth\";\n\nimport {\n    Spinner\n} from \"reactstrap\"\n\n//Components\nimport LeftAside from \"../../components/postDetailLeftAside\";\nimport RightAside from \"../../components/postDetailRightAside\";\nimport MainSection from \"../../components/postDetailMainSection\";\n\nimport \"./style.scss\"\n\nfunction PostDetail(props){\n    const [ postData, setPostData ] = useState(null)\n    const [ postComments, setPostComments ] = useState([])\n    const [ comment, setComment] = useState(\"\")\n    const [userData, setUserData] = useState(null)\n    const [collapsed, setCollapsed] = useState(true)\n\n\n    const postId = useParams().id\n    let history = useHistory()\n    props.changeIsCreatePost(false)\n\n    async function likePost(){\n        if (!userData){\n            history.push('/login')\n        }else{\n            const positiveReactionsCount = postData.positiveReactionsCount + 1\n            setPostData( {...postData, positiveReactionsCount})\n            const response = await api.updatePost(postId, {positiveReactionsCount}, userData.token)\n        }\n    }\n\n    function handleInputChange(event){\n        const value = event.target.value\n        setComment(value)\n    }\n\n    async function addComment(event){\n        const date = new Date()\n        const [day, month] =[date.toString().split(\" \")[2], date.toString().split(\" \")[1]]\n        const commentData = {\n            content: comment,\n            creationDate: date,\n            readableCreationDate: `${month} ${day}`,\n            userName: userData._id,\n            reactionsCounter: 0,\n        }\n        console.log(\"commentData\")\n        console.log(commentData)\n        const response = await api.addComment(postId, commentData, userData.token )\n        const postDataRes = await api.getPostById(postId)\n        console.log(\"postDataRes\");\n        console.log(postDataRes);\n        const extendedPostData = await mapCommentsUsers(postDataRes, userData.token)\n        console.log(\"extendedPostData\")\n        console.log(extendedPostData)\n        setPostData(extendedPostData)\n        setComment(\"\")\n        setCollapsed(false)\n    }\n\n    async function likeComment(event){\n        if (!userData){\n            history.push('/login')\n        }else{\n            const commentId = event.currentTarget.dataset.commentId\n            console.log(commentId)\n            let comments = [...postData.comments]\n            console.log(comments)\n            const commentIdx = comments.findIndex(comment => comment._id == commentId)\n            console.log(commentIdx)\n            comments[commentIdx].reactionsCounter = comments[commentIdx].reactionsCounter + 1\n            console.log(comments)\n            setPostData({...postData, comments})\n            await api.updateComment(commentId, {reactionsCounter:comments[commentIdx].reactionsCounter}, userData.token)\n        }\n    }\n\n    function onCommentClick(){\n        !userData && history.push('/login')\n    }\n\n    useEffect(async ()=>{\n        const userData = getUserData()\n        setUserData(userData)\n        const postDataRes = await api.getPostById(postId)\n        const extendedPostData = await mapCommentsUsers(postDataRes, \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMTk0NjUzNzMzNTIwMTBlMDYyOTY3ZSIsImlhdCI6MTYzMTkzNTE3MiwiZXhwIjoxNjMyNTM5OTcyfQ.zjjh8drORIg2FsjCN3FoWweLEZgwuj4w0bCRWc12xzQ\")\n        console.log(extendedPostData)\n        setPostData(extendedPostData)\n    },[])\n\n    async function mapCommentsUsers(postData, tokenC){\n        const users = await api.getAllUsers(tokenC)\n        let extendedComments = postData.comments.map( comment => {\n            const userNameId = comment.userName\n            const user = users.filter(user => user._id == userNameId)[0].userName\n            return {...comment, readableUserName: user}\n        })\n        return {...postData, comments: extendedComments}\n    }\n\n    return(\n        \n\n        <main className=\"container-xl custom-container\">\n        { !postData && <Spinner type=\"grow\" color=\"primary\" children=\"\"/>}\n        { postData  &&\n            <div className=\"row\">\n                <aside className=\"col-12 col-md-1\">\n                    <LeftAside\n                        positiveReactionsCount= { postData.positiveReactionsCount }\n                        likePost = { likePost }\n                        />\n                </aside>\n                <section className=\"col-12 col-md-11 col-lg-8 post-detail\">\n                    <MainSection\n                    postData = { postData }\n                    handleInputChange = { handleInputChange }\n                    comment = { comment }\n                    addComment = { addComment }\n                    likeComment = { likeComment }\n                    onCommentClick ={ onCommentClick }\n                    collapsed = { collapsed }\n                    setCollapsed = {setCollapsed}\n                    />\n                    \n                </section> \n                <aside className=\"d-none d-lg-block d-xl-block col-lg-3 col-xl-3\">\n                    <RightAside\n                    postData = { postData }\n                    />\n                </aside>\n            </div>\n        }\n        </main>\n    )\n}\n\nexport default PostDetail\n\n/*Pending\nmakes comments faster\nhandle authentication\ncollapse comments\ninput validation\ncolors of tags\nSpinner\n*/"]},"metadata":{},"sourceType":"module"}